smart-complaint-box/
│
├── backend/                         # Backend API + logic
│   ├── main.py                      # FastAPI app (submit + track endpoints)
│   ├── classifier.py                # Loads trained models & runs predictions
│   ├── router.py                    # Routing engine (department mapping + escalation)
│   ├── storage.py                   # Complaint storage (in-memory now, DB later)
│   └── utils.py                     # Helper functions (timestamps, IDs, logging)
│
├── ml_models/                       # ML training + models
│   ├── dataset/
│   │   └── complaints.csv           # Master dataset (complaint_text, category, subcategory, urgency)
│   │
│   ├── train_all.py                 # Trains category, urgency, subcategory models
│   │
│   └── trained_data/               # Final trained ML models
│       ├── category_model.pkl
│       ├── urgency_model.pkl
│       └── subcategory_models/
│           ├── subcategory_Water.pkl
│           ├── subcategory_Electrical.pkl
│           ├── subcategory_Sanitation.pkl
│           └── subcategory_Road.pkl
│
├── config/                          # Config files
│   ├── routing.json                 # Maps category+subcategory → officers at L1, L2, L3
│   └── escalation.json              # Defines time thresholds for escalation by urgency
│
├── frontend/                        # Simple UI
│   ├── index.html                   # Complaint submission form
│   ├── track.html                   # Track complaint form
│   └── js/                          # Optional JS files if separated
│
├── database/                        # DB (future integration)
│   ├── schema.sql                   # SQL schema for complaints, departments, logs
│   └── models.py                    # ORM classes (SQLAlchemy/Django ORM)
│
├── tests/                           # Unit tests
│   ├── test_classifier.py           # Tests ML predictions
│   ├── test_router.py               # Tests routing & escalation
│   └── test_api.py                  # Tests API endpoints
│
├── docs/                            # Documentation & diagrams
│   ├── architecture.png             # System workflow diagram
│   └── readme_notes.md              # Notes for teammates
│
├── requirements.txt                 # Python dependencies
└── README.md                        # Project overview & setup guide
